using Leopotam.EcsLite;
using Leopotam.EcsLite.Di;
using System.Collections.Generic;
using UnityEngine;

namespace Client
{
    public class SourceDamageCDSystem : MainEcsSystem
    {
        readonly EcsFilterInject<Inc<SourceDamageCDComponent>> _filter;
        readonly EcsPoolInject<SourceDamageCDComponent> _sourceDamagePool;
        public override MainEcsSystem Clone()
        {
            return new SourceDamageCDSystem();
        }
        public override void Run(IEcsSystems systems)
        {
            foreach(var entity in _filter.Value)
            {
                ref var sourceDamageCD = ref _sourceDamagePool.Value.Get(entity);
                List<RecipientDamage> recipientsRemove = new();
                foreach(var recipient in sourceDamageCD.listRecipientDamage)
                {
                    recipient.Timer -= Time.deltaTime;
                    if (recipient.Timer > 0) continue;
                    recipientsRemove.Add(recipient);
                }
                foreach(var recipientRemove in recipientsRemove)
                {
                    sourceDamageCD.listRecipientDamage.Remove(recipientRemove);
                }
            }

        }
    }
}