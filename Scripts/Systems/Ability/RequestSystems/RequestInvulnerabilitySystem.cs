using Leopotam.EcsLite;
using Leopotam.EcsLite.Di;
using System.Collections.Generic;

namespace Client {
    sealed class RequestInvulnerabilitySystem : MainEcsSystem {
        readonly EcsFilterInject<Inc<RequestInvulnerability>> _filter = default;
        readonly EcsPoolInject<RequestInvulnerability> _requestPool = default;
        readonly EcsPoolInject<Invulnerable> _invulnerablePool = default;

        public override MainEcsSystem Clone()
        {
            return new RequestInvulnerabilitySystem();
        }

        public override void Run (IEcsSystems systems) {
            foreach (int entity in _filter.Value)
            {
                if (!_invulnerablePool.Value.Has(entity)) _invulnerablePool.Value.Add(entity).timers = new List<float>();
                ref var invulnerable = ref _invulnerablePool.Value.Get(entity);
                ref var request = ref _requestPool.Value.Get(entity);
                foreach (float timer in request.TimerStack)
                {
                    invulnerable.timers.Add(timer);
                }
            }
        }
    }
}